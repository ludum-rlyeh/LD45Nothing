[gd_scene load_steps=5 format=2]

[ext_resource path="res://scripts/Main.gd" type="Script" id=1]
[ext_resource path="res://scenes/Canvas.tscn" type="PackedScene" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D BGTexture;
uniform sampler2D ViewportTexture0;
uniform sampler2D ViewportTexture1;
uniform sampler2D ViewportTexture2;

vec3 getFirstColor(sampler2D text0, sampler2D text1, vec2 uv)
{
	vec4 col = texture(text0, uv);
	vec4 col2 = texture(text1, uv);
	
	if(col.w > 0.0)
	{	
		return col.rgb;
	}
	return col2.rgb;
}
	

void fragment() {

	vec4 col = texture(TEXTURE, SCREEN_UV);
	if(col.w > 0.0)
	{
		vec3 coltmp = col.xyz * 0.16;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.15;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(-SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.15;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(2.0 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.12;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(2.0 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.12;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(3.0 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.09;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(3.0 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.09;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(4.0 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.05;
    	coltmp += getFirstColor(TEXTURE, BGTexture, SCREEN_UV + vec2(4.0 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.05;
		
		col = vec4(coltmp, 1.0);
	}
	else
	{
		col = texture(BGTexture, SCREEN_UV);
	}
    
	
	COLOR = col;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Main" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 1 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1024, 600 )
transparent_bg = true
handle_input_locally = false
disable_3d = true
usage = 0
render_target_update_mode = 3

[node name="Canvas" parent="." instance=ExtResource( 2 )]
